#!/usr/bin/env node

const http = require('http');

let app = require('../app.');

/* Catch 400 error status */
app.use((req, res, next) => {
  res.status(404);
});

/* Catch 500 error status */
app.use((req, res, next) => {
  // Error Logger
  console.log('Error', req.method, req.path, err);

  if (!res.headersSent) {
    res.status(500);
    res.send({ message: 'Error: 500' });
  }
});

/* SERVER INITIALIZATION */
let server = http.createServer(app);

server.on('error', error => {
  if (error.syscall !== 'listen') { throw error }

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(`Port ${process.env.PORT} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`Port ${process.env.PORT} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
});

server.listen(process.env.PORT, () => {
  console.log(`Listening on http://localhost:${process.env.PORT}`);
});
